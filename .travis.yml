language: java
services: docker

jdk: 
 - openjdk8

jobs:
  include:
  
  - env:
    - MAVEN_NASHORN=
    - JSQL_DOCKERFILE=3.6.3-jdk-8-slim
    
  - env:
    - MAVEN_NASHORN=-Dnashorn.args=--no-deprecation-warning
    - JSQL_DOCKERFILE=3.6.3-jdk-11-slim
    
  - env:
    - MAVEN_NASHORN=-Dnashorn.args=--no-deprecation-warning
    - JSQL_DOCKERFILE=3.6.3-openjdk-14-slim

branches:
  only:
  - master
  
addons:
  sonarcloud:
    organization: ron190-github
    token:
      secure: Fi8pYQTRDsIzBBKPTLHcAxkm0l0JcrZZvADbhwWG95lqKgtEtGI0OzWB5nFUBiOu5N20yrMPz/x4BUTyqr61xZiOocB9SH5ya4jqlraIlQW3WPH0enZ7e/g/JmqiAttuhzic7s12XQR5VwvAbG7ZkHa41liJ0nTd8HiLG7TOPep0hVTX/VZ/+K1B0FMJJVsMNMfhDsrtegxLryoeCSuKpwiAXXN2GkTtV2g1o1fxSmFMb0cepC/03Hskfp4ZxnHaY9yQfJISulTuxv9EUy5ecQZj+btf+QB3iNAwNFIE/xC6VeuCSrTJ01kG9w9DvY3W6z9NywxVHL5fJNDHcWsIz6/FpdNZgwxw6hIBQOimSa2/oXrPNyNR/bUyu6kQMFitDXWNxZj56yicqduNc46ni9NjsavCMlTJrdh/MYKB+C8e2IVa11QT988iTZo5C7MjUqUJU4gKBgdcn0jGZb20pxd7/Gtf4uMz7tp9mQRCTXpV6OSE85phwezledPud1f7/TG/QBrzZCL3YTMLhrDLhiratHweitPpr3da2+HrjSkdmunGdyufB+bseJP68ghjG5QpYBakjkJgkGYXd+S/r1NHmsGhbuk3/S0WtoYRhlAaBl3U8c7z8/lBcPhNbkQmfjIMolTjVdK61rQSads1b3kgVcImsux0IxEhUjowqag=
    
cache:
  directories:
    - $HOME/.m2
    - $HOME/.sonar/cache

before_script:

  - env | sort
  - sudo cat /proc/meminfo
  - java -XX:+PrintFlagsFinal -version | grep -iE 'HeapSize|PermSize|ThreadStackSize'
  
  # git update-index --chmod=+x <file>
  - docker-compose -f ./model/src/test/resources/docker/docker-compose.yml build --parallel
  - docker-compose -f ./model/src/test/resources/docker/docker-compose.yml up -d
  - ./model/src/test/resources/docker/healthcheck/healthcheck.sh
  - ./model/src/test/resources/docker/script/buff.sh
  - ./model/src/test/resources/docker/script/verify.sh
  
  - docker rmi jsql:latest -f
  - docker build -t jsql:latest --build-arg JSQL_DOCKERFILE=${JSQL_DOCKERFILE} -f model/src/test/resources/docker/Dockerfile.jsql .

script:

  # - docker run 
  #   -v "$HOME/.m2":/root/.m2 
  #   -v "$HOME/.sonar/cache":/root/.sonar/cache
  #   -e "SONARQUBE_SCANNER_PARAMS=${SONARQUBE_SCANNER_PARAMS}"
  #   -e "SONAR_TOKEN=${SONAR_TOKEN}"
  #   --network docker_jsql-network 
  #   jsql:latest 
  #   ./model/src/test/resources/vnc/execute-on-vnc.sh 
  #   mvn clean verify sonar:sonar
  # - |
  #   export DOCKER_RUN=$?
  #   echo "docker run exit code: ${DOCKER_RUN}"
  #   if [ ${DOCKER_RUN} -ne 0 ]; then exit 1; fi
  - ./model/src/test/resources/docker/script/run.sh
  - ./model/src/test/resources/docker/script/verify.sh
  
# after_success:

  # - bash <(curl -s https://codecov.io/bash)
  # 
  # - export CODACY_PROJECT_TOKEN=43e8b6719fbc4f3cbef25d863d7440c8
  # - bash <(curl -Ls https://coverage.codacy.com/get.sh)
