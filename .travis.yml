language: java

services: docker
  
before_install:
  - docker build 
    -t mysql 
    -f src/test/resources/docker/Dockerfile.mysql .
    
  - docker build 
    -t mysql 
    -f src/test/resources/docker/Dockerfile.mysql-5.5.40 .
    
  - docker build 
    -t postgres 
    -f src/test/resources/docker/Dockerfile.postgres .
    
  - docker run 
    --name jsql-mysql  
    --publish 3306:3306 
    -e MYSQL_ROOT_PASSWORD=my-secret-pw 
    -d mysql
    --max_connections=200
    --thread_cache_size=200
    
  - docker run 
    --name jsql-mysql-5.5.40 
    --publish 3307:3306 
    -e MYSQL_ROOT_PASSWORD=my-secret-pw 
    -v ./src/test/resources/docker/conf.d/:/etc/mysql/conf.d/ 
    -d mysql:5.5.40
    
  - docker run 
    --name jsql-postgres 
    --publish 5432:5432 
    -e POSTGRES_PASSWORD=mysecretpassword 
    -d postgres 
    -c 'shared_buffers=256MB'
    -c 'max_connections=200'
    
  - docker ps && pwd
  
#  - rm "${JAVA_HOME}/lib/security/cacerts"
#  - ln -s /etc/ssl/certs/java/cacerts "${JAVA_HOME}/lib/security/cacerts"
  
jdk: openjdk8

addons:
  sonarcloud:
    organization: "ron190-github"
    token:
      secure: "Fi8pYQTRDsIzBBKPTLHcAxkm0l0JcrZZvADbhwWG95lqKgtEtGI0OzWB5nFUBiOu5N20yrMPz/x4BUTyqr61xZiOocB9SH5ya4jqlraIlQW3WPH0enZ7e/g/JmqiAttuhzic7s12XQR5VwvAbG7ZkHa41liJ0nTd8HiLG7TOPep0hVTX/VZ/+K1B0FMJJVsMNMfhDsrtegxLryoeCSuKpwiAXXN2GkTtV2g1o1fxSmFMb0cepC/03Hskfp4ZxnHaY9yQfJISulTuxv9EUy5ecQZj+btf+QB3iNAwNFIE/xC6VeuCSrTJ01kG9w9DvY3W6z9NywxVHL5fJNDHcWsIz6/FpdNZgwxw6hIBQOimSa2/oXrPNyNR/bUyu6kQMFitDXWNxZj56yicqduNc46ni9NjsavCMlTJrdh/MYKB+C8e2IVa11QT988iTZo5C7MjUqUJU4gKBgdcn0jGZb20pxd7/Gtf4uMz7tp9mQRCTXpV6OSE85phwezledPud1f7/TG/QBrzZCL3YTMLhrDLhiratHweitPpr3da2+HrjSkdmunGdyufB+bseJP68ghjG5QpYBakjkJgkGYXd+S/r1NHmsGhbuk3/S0WtoYRhlAaBl3U8c7z8/lBcPhNbkQmfjIMolTjVdK61rQSads1b3kgVcImsux0IxEhUjowqag="

script:
  - docker exec --privileged -u root -it jsql-mysql /bin/bash 
    -c "
       mysql 
       -uroot 
       -pmy-secret-pw 
       -e '
       show global variables where Variable_name rlike \"thread_cache_size|^max_connections\";
       ';
       "
  - mvn clean verify sonar:sonar

cache:
  directories:
    - $HOME/.m2
    - $HOME/.sonar/cache

after_success:
  - bash <(curl -s https://codecov.io/bash)
